/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientes;

import clases.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JAHC
 */
public class PanelVerClientes extends javax.swing.JPanel {

    /**
     * Creates new form VerClientes
     */
    public PanelVerClientes() {
        initComponents();
        cargarPacientes();
    }
    
    public void cargarPacientes(){
                try{
            DefaultTableModel modelo = new DefaultTableModel(){
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
                
            };
            TablaClientes.setModel(modelo);
            
            PreparedStatement ps =null;
            ResultSet rs = null;
            Conexion conn = new Conexion();
            Connection con = conn.conectar();
            
            String sql = "SELECT id, nombre, apellido, ciudad, direccion, telefono, mail, sexo, peso, estatura, edad FROM pacientes";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();
            
            modelo.addColumn("id");
            modelo.addColumn("Nombre");
            modelo.addColumn("Apellido");
            modelo.addColumn("Ciudad");
            modelo.addColumn("Direcion");
            modelo.addColumn("Telefono");
            modelo.addColumn("Mail");
            modelo.addColumn("Sexo");
            modelo.addColumn("Peso");
            modelo.addColumn("Estatura");
            modelo.addColumn("Edad");
            
            while(rs.next()){
                Object[] filas = new Object[cantidadColumnas];
                for(int i = 0; i < cantidadColumnas; i++){
                    filas[i]=rs.getObject(i+1);
                }
                modelo.addRow(filas);
            }
            
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TablaClientes = new javax.swing.JTable();
        btnEliminarPaciente = new javax.swing.JButton();

        TablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Nombre", "Apellido", "Ciudad", "Dirección", "Teléfono", "Email", "Sexo", "Peso", "Estatura", "Edad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablaClientes);
        if (TablaClientes.getColumnModel().getColumnCount() > 0) {
            TablaClientes.getColumnModel().getColumn(0).setResizable(false);
            TablaClientes.getColumnModel().getColumn(1).setResizable(false);
            TablaClientes.getColumnModel().getColumn(2).setResizable(false);
            TablaClientes.getColumnModel().getColumn(3).setResizable(false);
            TablaClientes.getColumnModel().getColumn(4).setResizable(false);
            TablaClientes.getColumnModel().getColumn(5).setResizable(false);
            TablaClientes.getColumnModel().getColumn(6).setResizable(false);
            TablaClientes.getColumnModel().getColumn(7).setResizable(false);
            TablaClientes.getColumnModel().getColumn(8).setResizable(false);
            TablaClientes.getColumnModel().getColumn(9).setResizable(false);
            TablaClientes.getColumnModel().getColumn(10).setResizable(false);
        }

        btnEliminarPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Botones/BTN_ELIMINAR_PACIENTE_NORM.png"))); // NOI18N
        btnEliminarPaciente.setBorder(null);
        btnEliminarPaciente.setBorderPainted(false);
        btnEliminarPaciente.setContentAreaFilled(false);
        btnEliminarPaciente.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Botones/BTN_ELIMINAR_PACIENTE_PRESS.png"))); // NOI18N
        btnEliminarPaciente.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Botones/BTN_ELIMINAR_PACIENTE_HIGH.png"))); // NOI18N
        btnEliminarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPacienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 878, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(401, 401, 401)
                .addComponent(btnEliminarPaciente)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(btnEliminarPaciente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPacienteActionPerformed
        try {
            DefaultTableModel model = new DefaultTableModel();
            Connection cn = Conexion.conectar();
            
            int Fila = TablaClientes.getSelectedRow();
            String id_paciente = TablaClientes.getValueAt(Fila, 0).toString();
            //model.removeRow(Fila);
            PreparedStatement pst = cn.prepareStatement ("DELETE FROM pacientes WHERE id=?");
            pst.setString(1, id_paciente);
            pst.execute();
            cargarPacientes();
            
        
        } catch (SQLException ex) {
            System.err.println("Error al cargar datos. " + ex);
//            JOptionPane.showMessageDialog(null, "Error al eliminar consulta. Contacte al administrador");
        }
    }//GEN-LAST:event_btnEliminarPacienteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaClientes;
    private javax.swing.JButton btnEliminarPaciente;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
