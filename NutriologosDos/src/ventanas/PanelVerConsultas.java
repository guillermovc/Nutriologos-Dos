/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import clases.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSetMetaData;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author PC_E&G
 */
public class PanelVerConsultas extends javax.swing.JPanel {

    /**
     * Creates new form verConsultas
     */
    public PanelVerConsultas() {
        initComponents();
        cargarConsultas();
    }
    
    public void cargarConsultas(){
        try {
            DefaultTableModel model = new DefaultTableModel(){
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
                
            };
            tablaConsultas.setModel(model);
            
            ResultSet rs = null;
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement ("SELECT id, id_paciente, fecha, fecha_registro, asistencia, descripcion FROM citas");
            
            rs = pst.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();
            
            model.addColumn("id");
            model.addColumn("id_paciente");
            //model.addColumn("id_nutriologo");
            model.addColumn("fecha");
            model.addColumn("fecha_registro");
            model.addColumn("asistencia");
            model.addColumn("descripcion");
            
            int[] anchos ={50,140, 140, 150, 140, 600};
            
            for(int x = 0; x < cantidadColumnas; x++){
                tablaConsultas.getColumnModel().getColumn(x).setPreferredWidth(anchos[x]);
            }
            
            while(rs.next()){
                Object[] filas = new Object[cantidadColumnas];
                for(int i = 0;  i < cantidadColumnas; i++){
                    filas[i] = rs.getObject(i+1);
                }
                model.addRow(filas);
            }
            
        } catch (SQLException ex) {
            System.err.println("Error al cargar datos. " + ex);
            JOptionPane.showMessageDialog(null, "Error al cargar datos de la tabla. Contacte al administrador");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaConsultas = new javax.swing.JTable();
        btnEliminarConsulta = new javax.swing.JButton();

        jLabel1.setText("Consultas");

        tablaConsultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "id_paciente", "id_nutriologo", "fecha", "fecha_registro", "asistencia", "descripcion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaConsultas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaConsultasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaConsultas);

        btnEliminarConsulta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Botones/BTN_ELIMINAR_CONSULTA_NORM.png"))); // NOI18N
        btnEliminarConsulta.setBorder(null);
        btnEliminarConsulta.setBorderPainted(false);
        btnEliminarConsulta.setContentAreaFilled(false);
        btnEliminarConsulta.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Botones/BTN_ELIMINAR_CONSULTA_PRESS.png"))); // NOI18N
        btnEliminarConsulta.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Botones/BTN_ELIMINAR_CONSULTA_HIGH.png"))); // NOI18N
        btnEliminarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarConsultaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminarConsulta)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(btnEliminarConsulta))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tablaConsultasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaConsultasMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaConsultasMouseClicked

    private void btnEliminarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarConsultaActionPerformed

        try {
            DefaultTableModel model = new DefaultTableModel();
            Connection cn = Conexion.conectar();
            
            int Fila = tablaConsultas.getSelectedRow();
            String id_consulta = tablaConsultas.getValueAt(Fila, 0).toString();
            
            PreparedStatement pst = cn.prepareStatement ("DELETE FROM citas WHERE id=?");
            pst.setString(1, id_consulta);
            pst.execute();
            
            //model.removeRow(Fila);
            cargarConsultas();
        } catch (SQLException ex) {
            System.err.println("Error al cargar datos. " + ex);
//            JOptionPane.showMessageDialog(null, "Error al eliminar consulta. Contacte al administrador");
        }
    }//GEN-LAST:event_btnEliminarConsultaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminarConsulta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaConsultas;
    // End of variables declaration//GEN-END:variables
}
